https://github.com/caioycosta/lrzip-cygwin commit 3d61fde

"It seems the original developer had a misunderstanding on the locking
implementation. There are mutexes being locked in one thread and unlocked in
another, mutexes being locked twice by the same thread..."

--- origsrc/lrzip-0.616/rzip.c	2013-09-01 21:04:31.000000000 -0500
+++ src/lrzip-0.616/rzip.c	2014-03-08 23:36:27.517044300 -0600
@@ -726,8 +726,8 @@ static inline bool hash_search(rzip_cont
 				fatal_return(("Failed to malloc ckbuf in hash_search\n"), false);
 			control->do_mcpy(control, control->checksum.buf, cksum_limit, control->checksum.len);
 			control->checksum.cksum = &st->cksum;
-			cksum_update(control);
 			cksum_limit += control->checksum.len;
+			cksumthread((void*)control);
 		}
 	}
 
--- origsrc/lrzip-0.616/stream.c	2013-09-01 21:03:55.000000000 -0500
+++ src/lrzip-0.616/stream.c	2014-03-08 23:37:58.623255300 -0600
@@ -1467,11 +1467,7 @@ static bool clear_buffer(rzip_control *c
 	}
 	s->i = i;
 	s->control = control;
-	if (unlikely((!create_pthread(control, &threads[i], NULL, compthread, s)) ||
-	             (!detach_pthread(control, &threads[i])))) {
-		unlock_mutex(control, &cthread[i].mutex);
-		return false;
-	}
+	compthread(s);
 
 
 	if (newbuf) {
